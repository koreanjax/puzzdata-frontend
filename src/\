import { fetchCard } from './api.ts'
import { useState, useEffect } from 'react'
import './Card.css'
import img from './assets/07170.webp'
import { emptyCardResult } from './data-interface-factory.ts'
import { CardOrganized, emptyCardOrganized, CardApiToOrganized } from './card-organized-interface.ts'

export default function Card({id}: { id: number }) {
  const [card, setCard ] = useState<CardOrganized>(emptyCardOrganized)
  const [level, setLevel] = useState(0)
  const [hp, setHp] = useState(0)
  const [atk, setAtk ] = useState(0)
  const [rcv, setRcv ] = useState(0)

  useEffect(() => {
    if (id > 0) {
      fetchCard(id).then(result => {
        setCard(CardApiToOrganized(result))
      })
    }
  },[id])

  useEffect(() => {
    setLevel(card.maxLevel)
  },[])

  useEffect(() => {
    calcStats()
  },[level])

  const calcStats = (vals: number[]) => number {
    let growth: nubmer = (level - 1) / (card.maxLevel - 1)
    let value: number = vals[0] + (vals[1] - vals[0])*Math.pow(growth, vals[2])
    return(value)
  }

  const setStats = () => {
    setHp(calcStats(card.hpVals))
    setAtk(calcStats(card.atkVals))
    setRcv(calcStats(card.rcvVals))
  }

  return (
  <div className="card">
    <div>
      {
        <div key={card.id}>
          <div className="card-main">
            <img className="card-icon" src={img} />
            <div>
              <div className="card-id">{card.id}</div>
              <div className="card-name">{card.name}</div>
            </div>
          </div>
          <div>
            <div class="awakenings">
              {card.awkns.map(awkn => (
                <div class="awakening">{awkn}</div>
              ))}
            </div>
            <div class="awakenings">
              {card.sAwkns.map(sAwkn => (
                <div class="awakeings">{sAwkn}</div>
              ))}
            </div>
            <div className="level-input">
              Level: 
              <input value={level}/>
            </div>
            <div className="stats">
              <div>HP: {hp}</div>
              <div>ATK: {atk}</div>
              <div>RCV: {rcv}</div>
            </div>
          </div>
        </div>
      }
    </div>
  </div>
  )
}
